# i have two more images, which mimick the office setting, prepared now: 
# TODO: build the newest open-suse leap image

image: dobrautz/neci_base:opensuse42.3

options:
  docker: true


pipelines:
  # default setup: only build neci for all branches and run neci unit tests, do not do any testsuite runs!
  #   to save pipeline minutes
 default: 
  - step: 
     size: 2x
     script: 
      - rm -rf build 
      - mkdir build 
      - cd build 
      - echo "building release version"
      - cmake ..
      - make -j neci test_neci
      - echo "done building release version"
      - echo "running unit tests"
      - ctest -R test_neci.*
      - echo "unit tests passed"
      - echo "running limited test_suite(to save build-minutes)"
      - useradd temp
      - cd ../test_suite
      - su -c "/testcode/bin/testcode.py -c dneci/double_occ/hub_2x2 -c kmneci/Rn_lanczos_fci -c kneci/C_221_int -c mneci/cfqmc/HeHe_5_states -c neci/parallel/C_Solid -vvv" -s /bin/sh temp

 branches:
   real-time:
    - step: 
       script: 
          # first do the debug build + hdf5 
        #- echo "building debug version + hdf5!"
        - rm -rf build 
        - mkdir build 
        - cd build 
        #- cmake -DENABLE_BUILD_HDF5=On -DENABLE_HDF5=On -DCMAKE_BUILD_TYPE=Debug ..
        #- make -j neci mneci kneci kmneci dneci
        #- echo "done building debug version. clean up!"
        #- rm -rf * 
        - echo "building release version + hdf5!"
        - cmake -DENABLE_BUILD_HDF5=ON -DENABLE_HDF5=ON ..
        - make -j 
        - echo "done building release version + hdf5!"
        - echo "running unit tests"
        - ctest
        - echo "unit tests passed"
        - echo "running limited test_suite(to save build-minutes)"
        - useradd temp
        - cd ../test_suite
        - su -c "/testcode/bin/testcode.py -c dneci/double_occ/hub_2x2 -c kneci/C_221_int -c mneci/cfqmc/HeHe_5_states -c neci/parallel/C_Solid" -s /bin/sh temp

# [W.D.] ignore the stuff below for now, will clean up later
 custom:
  test:
   - step:
      script:
      - echo "test manual"
      - rm -rf build_docker_test
      - mkdir build_docker_test 
      - cd build_docker_test 
      - cmake ..
      - make neci
      - rm -rf * 
      - cd .. 
      - rmdir build_docker_test
      - echo "done!"

  test_suite: 
   - step: 
      script: 
       - echo "test to run test_suite:"
       - rm -rf build
       - mkdir build 
       - cd build 
       - cmake .. 
       - make -j
       - cd ../test_suite 
       - testcode.py 
       - echo "the question is does this flag it as succesfull only if it passes??"

 branches:
   # for the master branch pushes run the full compilation, unit tests and part of the testsuite
   master:
    - step: 
       size: 2x
       script: 
        - rm -rf build 
        - mkdir build 
        - cd build 
        - echo "building release version"
        - cmake ..
        - make -j 
        - echo "done building release version"
        - echo "running unit tests"
        - ctest
        - echo "unit tests passed"
        - echo "running limited test_suite(to save build-minutes)"
        - useradd temp
        - cd ../test_suite
        - su -c "/testcode/bin/testcode.py -c dneci/double_occ/hub_2x2 -c kmneci/Rn_lanczos_fci -c kneci/C_221_int -c mneci/cfqmc/HeHe_5_states -c neci/parallel/C_Solid -vvv" -s /bin/sh temp


 custom:
   # this is an optional full run, if one chooses to test a specific branch fully
  - step: 
     size: 2x
     script: 
      - rm -rf build 
      - mkdir build 
      - cd build 
      - echo "building release version"
      - cmake ..
      - make -j 
      - echo "done building release version"
      - echo "running unit tests"
      - ctest
      - echo "unit tests passed"
      - echo "running limited test_suite(to save build-minutes)"
      - useradd temp
      - cd ../test_suite
      - su -c "/testcode/bin/testcode.py -c dneci/double_occ/hub_2x2 -c kmneci/Rn_lanczos_fci -c kneci/C_221_int -c mneci/cfqmc/HeHe_5_states -c neci/parallel/C_Solid -vvv" -s /bin/sh temp

