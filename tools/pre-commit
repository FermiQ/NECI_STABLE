#!/bin/bash

RC=0
SBIN=0

ROOT_DIR=$PWD

TMPDIR=$(mktemp -d)
trap 'rm -rf "$TMPDIR"' EXIT

# checkout changed files
for FILE in $(git diff-index --cached --name-only HEAD); do
    git checkout-index --prefix=$TMPDIR/ $FILE 2> /dev/null
done

cd $TMPDIR
if [ -x $ROOT_DIR/tools/check_style.py ]; then
    if ! $ROOT_DIR/tools/check_style.py ./; then
        RC=1
    fi
fi
cd $ROOT_DIR

if (( $RC ))
then
    exit $RC
fi


function protected_branch () {
    branch=$1
    echo "    ==========================================================="
    echo "    You tried to commit to the ${branch} branch"
    echo "    This is not recommended, even in your local machine."
    echo ""
    echo "    If you really want to do so,"
    echo "    use the \"--no-verify\" flag with \"git commit\"".
    echo ""
    echo "    Maybe you wanted to commit to a different branch, in that"
    echo "    case you should \"git checkout\" that branch first."
    echo ""
    echo "    You can always create a new local branch to commit to:"
    echo "    \"git branch <new-branch-name>\""
    echo "    ==========================================================="
}


BRANCH=$(git rev-parse --abbrev-ref HEAD)

case "$BRANCH" in
    # protected branches: disallow
    master)
        protected_branch master
        RC=3
        ;;
    devel)
        protected_branch devel
        RC=3
        ;;
    # any other branch: continue
    *)
        ;;
esac

if (( $RC ))
then
    exit $RC
fi

exit $RC
