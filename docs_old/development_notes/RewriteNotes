JSS, 15/02/10: These are notes from the first attempted reorganisation of NECI (Summer 2008?).  They might be
useful for future ideas, but are probably quite out of date.

Rough tree diagram of the current dependency network of NECI.
It's rather a mess, and .F files are listed below which would be at points C,D,I,S which I would like to turn into modules.

(See the dependency graphs produced by JSS for more detailed/up-to-date information.)

                    FciMCPar   FciMC           GraphMorph{,2}  NECICore  ReturnPathMC
                     | |         |-------|        | StarDiagTrip | StarMC  |  stardiag
               |-----| |         |     MCDets     |      |       |   |     |   |
               |       ----------|-------|--------|------|-------|---|-----|---|
               |                 |
           Parallel              |           C   readinput
               |-----------------|-----------|-----|
                               Calc
                     |-----|-----|
                     !     |     |
                 HFCalc DetCalc  |
                     |   !       |  nodediag    D
         RhoElement  |   !       |     |        |
                |    |   !-------|-----|--------|
                |    |   |
    I           Determinants    symexcit2       precalc
    |-----------------|----------|                 |
        readdf   Integrals             S        precalcread       vasp_init
         |  |         |                |           |                |
         |  |-------- |----------------|-----------|----------------|
         |            |
record_handler  |-----|-----|-----------|------------|
                |           |           |            |
             System      UMatCache    OneEInts    vasp_neci_interface
               |            |           |
               |----|-------|-----------|
                    |
                |---|-------|---------|----------|---------------|-------|
                |           |         |          |               |       |        
               Logging      |      HElem    MemoryManagement  SymData   CPMDData  
                 |          |                                                     
                 |----------|
                          input                                                   

Tasks to improve flow of NECI
=============================

Calc to call lower level routines like fcimc - Calc at the top
Rewrite of the method farming section of mcpaths.F - allow backward compatability
CalcRho_PII routines rewritten to cope with new method farming routine
Keyword driven input parameters from which to pick jobs
Remove legacy code to its own folder - include commenting/documentation on how it works/why it didn't work - what it intends to do
Developers documention

Other
=====

Direct lanczos FCI for Hubbard
Blocks of symmetry determiants to diagonalise in Lanczos - not store full compressed matrix - allow possibilty of CSFs - gndts_blk.F
Interface with QChem
Python interface?


The *.F files listed according to the modules they use.
=======================
Everything:
mcpaths.F
   MCPATHSR10        Handle methods block
      Determinants:
         GetHElement2
      System:
         BasisFN
      PreCalc:
         GETVARS
      PRECALCREAD:
         PREIV_MAX
         TPREVAR
      STARDIAGMOD:
         fMCPR3StarNewExcit
      GraphMorph:
         MorphGraph
      MCStarMod:
         MCStar
      StarDiagTripMod:
         StarDiagTrips
      FciMCParMod:
         FciMCPar
      FciMCMod:
         FciMC
      ReturnPathMCMod:
         ReturnPathMC
      NODEDIAG:
         fMCPR3StarNodes
      Calc:
         G_VMC_FAC
         CUR_VERT
         g_MultiWeight
         TMPTHEORY
         TMCDIRECTSUM
         TDIAGNODES
         TGraphMorph
         calcp_logweight
         TStarTrips
         TFCIMC
         TReturnPathMC
   MCPATHSR3      single METHOD
      System:
         BasisFN
      Determinants:
         GetHElement2
      STARDIAGMOD:
         fMCPR3StarNewExcit
      NODEDIAG:
         fMCPR3StarNodes
      GraphMorph:
         MorphGraph
      MCStarMod:
         MCStar
      StarDiagTripMod:
         StarDiagTrips
      FciMCParMod:
         FciMCPar
      FciMCMod:
         FciMC
      ReturnPathMCMod:
         ReturnPathMC
      PRECALCREAD:
         TPREVAR
      Calc:
         TMPTHEORY
         TDIAGNODES
         TGraphMorph
         TStarTrips
         calcp_logweight
         TFCIMC
         TReturnPathMC
   FMCPR3
      System:
         BasisFN
      Determinants:
         GetHElement2
      Calc:
         TMPTHEORY 
   FMCPR3B
      System:
         BasisFN
      Determinants:
         GetHElement2
      Calc:
         TVARCALC
         TMPTHEORY 
      PRECALCREAD:
         TPREVAR
         PREWEIGHTEPS

   WRITEPATH            Write a graph to an output unit
   WRITEDET             Write a determinant to an output unit  
   WRITEPATHEX          Write a graph as excitations to an ouput unit
   WRITERHOMAT          Dump a matrix to a single line on an output unit
   ELIMDUPS             Go through a number of sorted lists removing duplicates in the later list (but keeping them in the earlier one) - Used in FMCPR3
   FMCPR3STARJ          An attempt to do a jacobi diagonalization on a fully connected star.  Does not work, and is fundamentally flawed.
   FMCPR3NVSTAR        Add prediagonalized small graphs(3v) to a star, and then run a star diag.  Does not take into account double counting, so will most likely produce wrong results.
      ADDDIAGSTAR 
      READSTARDIAG
   ReadMCPaths          Read in E~ and w from an MCPATHS file
   ORBENERGY            Extract an orbital energy out of an NMAX arraw
   EndSeek              Go to the end of a file.

=======================
C  use Calc
calcpath.F
   CALCPATHS_N       revised version of CALCPATHS. Given a RHO or H matrix, get E~ and w E~.
      RHODIAG_CPP etc.  hdiag.F
      HDIAG_CPP etc.    rhodiag.F
      Calc: CALCP_SUB2VSTAR   if you want to make additional corrections to the 2v star from higher vertex graphs
            CALCP_LOGWEIGHT   Use the (experimental) LogWeight formalism.
   CLASSPATHS        histogram contributions from different types of graphs
   CLASSPATH         classify a graph according to its connectivity
   WRITECLASSPATHS   write CLASSPATHS information to CLASSPATHS{,2}
   CLEANCLASSPATHS   reset CLASSPATHS data
   
   CALCPATHS         legacy.  Given a RHO matrix, get E~ and w E~.  Will call RHODIAG_CPP
   CALCPATHS_R       legacy
   CP*               legacy

detham.F
  DETHAM             Create a compressed version of the hamiltonian matrix given a list of determinants
      Determinants:
         GetHElement2
      System:
         BasisFN
      Calc:
         TStar

excit.F
   AREDETSEXCITS     Given the excitation level between two dets, and the dets, return if they are connected excitations
                        (determined only by Brillouin's Theorem and excit level, NOT SYMMETRY)
   ISVALIDDET        Return if a det is valid, i.e. its first electron >=1 and`it is sorted
   GETEXCITATION     Return the differing electrons between two dets, and the parity of the permutation.
   GENEXCIT          Generate excitations of order at most NORDER from NI (excluding NI itself) in order.
                        This does not use excitation generators, but will use sym if requested.
                        This is very slow and produces very long lists.
      Calc:
         TNEWEXCITATIONS
      System:
         BasisFN    

      GENEXCIT_R
 

mcpathshdiag.F
   FMCPR3B2 
      Determinants:
         GetHElement2
      PRECALCREAD:
         TPREVAR
         PREWEIGHTEPS
      Calc:
         TVARCALC
         TMPTHEORY
         TMODMPTHEORY
         lNoTriples
      System:
         BasisFN
      
      Lots of routines called
   WriteGraphEnergies   ???
   GetGraphStats        ???
   

mcpathsismc.F
   MCPATHSR4
      Determinants:
         GetHElement2
      Calc:
         G_VMC_PI
         G_VMC_FAC
         G_VMC_SEED
         CUR_VERT
         g_MultiWeight
         TMPTHEORY
         TVVDISALLOW
         TMCDIRECTSUM
      System:
         BasisFN

   FMCPR4{,B,C}
   FMCPR4D
      Calc:
         G_VMC_PI
   GENRANDOMEXCITSYM
      System:
         BasisFM
   GETEXCITCOUNTSYM
      System:
         BasisFM
   GENRANDOMSPINEXCIT
      System:
         BasisFM
   FINDELECSPIN
   FINDNEWELECSPIN
   FMCPR4D2
      PRECALCREAD:
         TPREVAAR
      Calc:
         TMPTHEORY
         TMCDIRECTSUM
   FMCPR4D2GENGRAPH     Generate a new graph at random
      Determinants:
         GetHElement2
      Calc:
         G_VMC_PI
      PRECALCREAD:
         TPREVAR
      System:
         BasisFN
   GETTREENESS
   FMCPR4D3          Non-functional
      Calc:
         G_VMC_PI
   MCPR4D4MOVE       Used by MCPATHSR4 for Markov Chain MC
   MCPR4D4INC        Used by MCPATHSR4 for Markov Chain MC
   MCPR4D4DEC        Used by MCPATHSR4 for Markov Chain MC


=======================
D  use Determinants
csf.F
   ICMPCSFS          Compare two CSFs
   GETCSFFROMDET     Create a CSF based on a Det.  This will find a CSF which contains a given Det and return it
   CSFGETSPIN        Return (S,Sz) from a CSF)
   CSFCHKSPINSYM     Return true if two CSFs have the same spin (S,Sz)
   GETCSFEXCITLEVEL  Get the level of excitation between two CSFs.  
                       a closed orbital going to an open det is a single excitation.
                       a closed orbital going to empty orbital is a double
                       an open going to an empty is a single
   SYMGETSSZ         Convert a combined (S,Sz) quantum number to individual S, Sz
   GETUNCSFELEC      Get a normal basis function corresponding to a CSF-style stored basis fn.
                       Will generate with an appropriate Sz.  The SSYM  contribution is also returned..
   ISCSF             Return true if the argument is a CSF (rather than a Det)
   GENNEXTSYMCSF     Generate CSFs iteratively with a given sym
      System:
         BasisFN
         BasisFNSize 
   IFIND             Find the position of an integer in a sorted list
   GNCSFS            Generate a list of all CSFs (optionally at most a certain level of excitation from a given det)
                        Possibly use specific symmetries
      CSFGENCSFS     From a given closed/open orbital configuration, generate all CSFs in order.

   CSFGETHELEMENT    Get the Hamiltonian element between CSFs
      Determinants:
         GetHElement2
      System:
         BasisFN 
      CSFGETDETCOEFF get teh coeff of a det withing a CSF based on the  Clebsch-Gordon coeffs
   
   GETCLEBSCHGORDON  Return the Clebsch-Gordon coefficient coupling state with total spin S,
                        projected component of spin M, with state
                        with spin change SN_=(+/-)1/2 and  projected spin change MN_=(+/-)1/2
                         For SN_=+1/2 set SN=1, and for SN_=-1/2 set SN=0
                         For MN_=+1/2 set MN=1, and for MN_=-1/2 set MN=0
   CSFGENOPENDETS    Given a CSF, generate the list of dets which make it up
   CSFGETCHOOSEINDEICES
                     Given a NITEMS from which to choose NCHOOSE, we list all possible  choices in order, indexing them by ICHOOSE.
                     This generates a list of the items (in NINDICES) correposnding to the choice indexed by ICHOOSE.
                        We can use a method based on traversing a tree (21/4/05)
   CSFINCCHOOSEINDICES
                     Take an INDICES list, and move to the next set in order.
                     TDONE will be set to TRUE if we've reached the end
                    
   CSFGETCSFDATA     Take a CSF and from it determine the closed and open orbitals
   CSFGETSINDEX      Generate an SINDEX (a unique ID corresponding to the SORDER list)
                        from SORDER (the list of 0/1 = -/+ which specifies a particular CSF.


I  use Integrals
cpmdinit.F
hfbasis.F
readint.F
rootfind.F       #this definitely shouldn't be here!
scr.F
scr1.F
scr2.F
scrtramf.F
symexcit.F

S  use System
fodmat.F
gen_coul.F
gen_coul_ueg.F
gndts.F
gndts_blk.F
hdiag.F
hubbard.F
montecarlo.F
rhoofr.F
rlsxc{,1}_sc.F
sltcnd.F
sym.F

O use notihng
calcpathnci.F
factorpoly.F
mcpathsold.F
zsum.F
util.F
blas_tuned_NECSX.F
calcrho.F
chebint.F
fcoul.F
fctrl.F
frsblk.F
init_coul.F
init_coul2D.F
kb07ad.F
libstub.F
lineup.F
matmul.F
mcpathsch.F
mcpathsmcmc.F
oexcit.F
ranlux.F
rlsxc2_sc.F
sort2.F
sort_1.F
sorti.F
write_rho.F
xcener.F
xchole.F
xcholes.F
xcnrgy_dnsty.F
CPMDData.F90
HElem.F90
df_parameters.F90
environment_report.F90
input.F90
necimain.F90
stop_all.F90
vasp_neci_interface_stub.F90


=======================
? use misc
cpmdstub.F
freem.F
read_psi.F
rhodiag.F
timer.F

=======================

Calc I_HMAX codes
0     [inaccessible]
         I_VMAX!=0
            MCPATHSR2
         I_VMAX==0
            WIRHODIAG
-1    VERTEX SUM OLD
         FMCPR3
-3    [inaccessible]
         FMCPR4B
-4    [inaccessible]
         FMCPR4C
-5    [inaccessible]
         MCPATHSR5      #Markov Chain Monte Carlo?
-6    [inaccessible]
         MCPATHSR6      #Pick the largest cluster?
-7    VERTEX {MC, MCMETROPOLIS, MCDIRECT}
         MCPATHSR4 
-8    VERTEX SUM NEW
         FMCPR3B
-9    VERTEV STAR OLD
         FMCPR3STAR
-10   [ with METHODS block]
         MCPATHSR10
-14   VERTEX SUM READ
         ReadMCPaths  # Only for MCPATHSR10.  MCPATHSR3 will call MCPATHSR4
-19   VERTEX {MC, MCMETROPOLIS} HDIAG
         MCPATHSR4 
-20   VERTEX SUM HDIAG
         FMCPR3B2
-21   VERTEX {FCIMC, MCDets}
         FciMC
         FciMCPar
      VERTEX RETURNPATHMC
         ReturnPathMC
      VERTEX GRAPHMORPH {, HDIAG}
         MorphGraph
      VERTEX STAR NEW
         FMCPR3STARNewExcit
