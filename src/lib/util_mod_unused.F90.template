[int32]
type = integer(kind=int32)

[int64]
type = integer(kind=int64)

[realsp]
type = real(kind=sp)

[realdp]
type = real(kind=dp)

[compsp]
type = complex(kind=sp)

[compdp]
type = complex(kind=dp)

[char]
type = character(5)

[logical]
type = logical

=========================

module util_mod_unused
    use constants
    implicit none

    private
    public :: unused

    interface unused
        module procedure unused_%(name)s
    end interface

contains

    elemental subroutine unused_%(name)s(x)
        %(type)s, intent(in) :: x
        %(type)s :: tmp

        if (.false.) then
            tmp = x
        end if
    end subroutine
end module
