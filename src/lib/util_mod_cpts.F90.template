[int]
type = integer(kind=int32)
tmp_init = !
tmp_destroy = !

[int64]
type = integer(kind=int64)

[real]
type = real(kind=sp)

[doub]
type = real(kind=dp)

[logical]
type = logical

[cplx]
type = complex*8

[cplx_doub]
type = complex*16

[sym]
type = type(Symmetry)

[sympairprod]
type = type(SymPairProd)

[starwalker]
type = type(star_walker)

[excitgenerator]
type = type(ExcitGenerator)
tmp_init = call excitgenerator_init
tmp_destroy = call excitgenerator_destroy

=========================

module util_mod_cpts
    use constants
    use helem
    use SystemData, only: Symmetry, assignment(=)
    use symdata, only: SymPairProd, assignment(=)
    use StarDiagData
    use FciMCData, only: ExcitGenerator, assignment(=), excitgenerator_init, &
                         excitgenerator_destroy
    implicit none

    private
    public :: swap

contains

    ! Swap the  specified variables
    elemental subroutine swap (a, b)

        ! Sway the element a with the element b via a temporary variable.
        !
        ! InOut: a, b - The elements to swap.

        %(type)s, intent(inout) :: a, b
        %(type)s :: tmp

        %(tmp_init)s(tmp)
        tmp = a
        a = b
        b = tmp
        %(tmp_destroy)s(tmp)
    end subroutine

end module
