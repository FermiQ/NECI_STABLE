[int]
type = integer(kind=int32)

[int64]
type = integer(kind=int64)

[real]
type = real(kind=sp)

[doub]
type = real(kind=dp)

[logical]
type = logical

[cplx]
type = complex*8

[cplx_doub]
type = complex*16
=========================

module util_mod_cpts
	use constants
	implicit none

	! Swap the  specified variables
	! n.b. If we want to implement this for complex variables / helements then
	!      we need to put it in another template file, as >, < are not defined
	!      for complex data types.
	interface swap
		module procedure swap_%(name)s
	end interface

contains

	elemental subroutine swap_%(name)s (a, b)

		! Sway the element a with the element b via a temporary variable.
		!
		! InOut: a, b - The elements to swap.

		%(type)s, intent(inout) :: a, b
		%(type)s :: tmp

		tmp = a
		a = b
		b = tmp
	end subroutine

end module
